/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TiketKapal;


import static TiketKapal.FormCetakTiket.Jam;
import static TiketKapal.FormCetakTiket.Rute;
import static TiketKapal.FormCetakTiket.Tanggal;
import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author asus
 */
public class FormAdministrator extends javax.swing.JFrame {
ResultSet rs,rs1;
    /**
     * Creates new form FormAdministrator
     */

    
    public FormAdministrator() {
        initComponents();
        TampilNamaKapal();
        TampilRuteKereta();
        TampilDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void TampilNamaKapal() {
        try {
            Connection conn = koneksiDB.getKoneksiDB();
             Statement st =(Statement) conn.createStatement();
      
                rs=st.executeQuery("select nama_kapal from kapal");
            while(rs.next()){
                String nama_kereta = rs.getString("nama_kapal");
                kapal.addItem(nama_kereta);
                }
            rs.close();
        } catch (Exception e) {
             System.out.println("Terjadi Error!");
        }
    }
    
    private void TampilRuteKereta() {
        try {
            Connection conn = koneksiDB.getKoneksiDB();
             Statement st =(Statement) conn.createStatement();
                rs=st.executeQuery("select berangkat,tujuan from rute");
            while(rs.next()){
                String Berangkat = rs.getString("berangkat");
                String Tujuan = rs.getString("tujuan");
                String Rute = Berangkat + "-" + Tujuan;
                rute.addItem(Rute);
                }
            rs.close();
        } catch (Exception e) {
             System.out.println("Terjadi Error!");
        }
    }
    
    private void TampilDatabase() {
        try {
            Connection conn = koneksiDB.getKoneksiDB();
            Statement st = (Statement) conn.createStatement();
               String sql = "select * from tiket";
               ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                String Kereta = rs.getString("nama_kapal");
                String IdRute = rs.getString("id_rute");
                String Tanggal = rs.getString("waktu").substring(0,10);
                String Jam = rs.getString("waktu").substring(11,16);
                int Harga = rs.getInt("harga");
                
                Statement st1  = (Statement)conn.createStatement();
                rs1=st1.executeQuery("select berangkat, tujuan from rute where id_rute = '"+IdRute+"'");
               
                String Berangkat = null, Tujuan = null;
                while  (rs1.next()){
                    Berangkat = rs1.getString("berangkat");
                    Tujuan = rs1.getString("tujuan");
                }
                String Rute = Berangkat +"-"+ Tujuan;
                rs1.close();
                st1.close();
                DefaultTableModel model = (DefaultTableModel) tabel.getModel();
                Object[] data = {Kereta,Rute,Tanggal,Jam,Harga};
                model.addRow(data);
                }
            rs.close();
        } catch (Exception e) {
             System.out.println("Terjadi Error!");
        }
    }
    
    private int BacaIdRute (String Rute){
        int IdRute = 1;
        try {
            Connection conn = koneksiDB.getKoneksiDB();
            Statement st =(Statement) conn.createStatement();
            String sql = "select id_rute from rute where concat(berangkat,'-',tujuan) ='"+Rute+"'";
            ResultSet   rs =st.executeQuery(sql);
            while(rs.next()){
                IdRute = rs.getInt("id_rute");
              
                }
            rs.close();
            st.close();
        } catch (Exception e) {
            System.out.println("Gagal eksekusi query");
        }
        return IdRute;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        kapal = new javax.swing.JComboBox<>();
        rute = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tanggal = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jam = new javax.swing.JFormattedTextField();
        save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nama Kapal");

        jLabel2.setText("Rute Perjalanan");

        jLabel3.setText("Harga Tiket");

        jLabel4.setText("Tanggal");

        tanggal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        jLabel5.setText("Jam");

        jam.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama Kapal", "Rute Perjalanan", "Tangal", "Jam", "Harga Tiket"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        jButton1.setText("EXIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(harga)
                            .addComponent(kapal, 0, 187, Short.MAX_VALUE)
                            .addComponent(rute, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(29, 29, 29)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jam, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(tanggal))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kapal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(save))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String Kapal = kapal.getSelectedItem().toString();
        String Rute = rute.getSelectedItem().toString();
        String Tanggal = tanggal.getText();
        int Harga = Integer.parseInt(harga.getText());
        String Jam = jam.getText();
        
        int IdRute = BacaIdRute(Rute);
        System.out.println(IdRute+" "+ Rute);
        
        try {
                  
                    Connection koneksi= koneksiDB.getKoneksiDB();
                    String query = "INSERT INTO tiket (nama_kapal,id_rute,waktu,harga) values (?,?,?,?)";
                    //System.out.println(query);
                    PreparedStatement p = koneksi.prepareStatement(query);
                    p.setString(1,Kapal);
                    p.setInt(2, IdRute);
                    p.setString(3, (Tanggal +" "+Jam));
                    p.setInt(4, Harga);
                    
                    
                    DefaultTableModel model = (DefaultTableModel) tabel.getModel();
                    
                    Object [] data = {Kapal,Rute,Tanggal,Jam,Harga};
                    model.addRow(data);
                    
              p.executeUpdate();
                    p.close();
        } catch (Exception e) {
            String pesan = "Data gagal disimpan";
                JOptionPane.showMessageDialog(null, pesan,"Kesalahan",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 int ok =JOptionPane.showConfirmDialog(null,"apakah anda akan mengupdate record ini?","konfirmasi",
             JOptionPane.YES_NO_OPTION);
        try{
            Connection koneksi= koneksiDB.getKoneksiDB();
                    String query = "UPDATE tiket SET nama_kapal=?,id_rute=?,waktu=?,harga=? WHERE nama_kapal='"+kapal.getSelectedItem()+"'";
                    //System.out.println(query);
                    PreparedStatement p = koneksi.prepareStatement(query);
                    if (ok==0)
    
     {
        try {
                  
                    
                    p.setString(1,kapal.getSelectedItem().toString());
                    p.setString(2,rute.getSelectedItem().toString());
                    p.setString(3,tanggal.getText());
                     p.setString(4,jam.getText());
                    p.setString(5, harga.getText());
                    p.executeUpdate();
                    JOptionPane.showConfirmDialog(null, "sukses diupdate!");
                    
                    } catch (Exception e) {
                    JOptionPane.showConfirmDialog(null, "gagal diupdate!");
                    
                    
              p.executeUpdate();
                    p.close();
                    }
     
 }
        } catch (Exception e) {
            String pesan = "Data gagal diubah";
                JOptionPane.showMessageDialog(null, pesan,"Kesalahan",JOptionPane.INFORMATION_MESSAGE);
        }
 
     

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
   int i=tabel.getSelectedRow();
        kapal.setSelectedItem(tabel.getValueAt(i, 0).toString());  
        rute.setSelectedItem(tabel.getValueAt(i, 1).toString());
        harga.setText(tabel.getValueAt(i, 2).toString());
        tanggal.setText(tabel.getValueAt(i, 3).toString());
        jam.setText(tabel.getValueAt(i, 4).toString());
// TODO add your handling code here:
    }//GEN-LAST:event_tabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAdministrator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField harga;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jam;
    private javax.swing.JComboBox<String> kapal;
    private javax.swing.JComboBox<String> rute;
    private javax.swing.JButton save;
    private javax.swing.JTable tabel;
    private javax.swing.JFormattedTextField tanggal;
    // End of variables declaration//GEN-END:variables
}
