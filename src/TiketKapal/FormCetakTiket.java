package TiketKapal;

import static TiketKapal.FormCariKapal.IdTiket;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDFont;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

public class FormCetakTiket extends javax.swing.JFrame {
    
    ResultSet rs;
    public static String Nama;
    public static String Rute;
    public static String Kapal;
    public static String Tanggal;
    public static String Jam;
    
    public FormCetakTiket() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomor_tiket = new javax.swing.JTextField();
        lihat = new javax.swing.JButton();
        cetak = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Cetak Tiket ");

        jLabel2.setText("Nomor Tiket");

        nomor_tiket.setText("17");

        lihat.setText("Lihat");
        lihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatActionPerformed(evt);
            }
        });

        cetak.setText("CETAK TIKET");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama", "Kereta", "Rute", "Tanggal", "Jam"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        jButton1.setText("EXIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(cetak)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(nomor_tiket, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(lihat))
                            .addComponent(jButton1))
                        .addGap(119, 119, 119))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomor_tiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lihat))
                .addGap(18, 18, 18)
                .addComponent(cetak)
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatActionPerformed
        int IdTiket = Integer.parseInt(nomor_tiket.getText());

    //mencari tiket yang diminta dalam database
    try{
        //membuat koneksi
        Statement st =(Statement)koneksiDB.getKoneksiDB().createStatement();
            
            //membuat query SELECT
            String sql = "SELECT * FROM kapal INNER JOIN tiket ON tiket.nama_kapal = kapal.nama_kapal "
                    + "INNER JOIN rute ON tiket.id_rute= rute.id_rute INNER JOIN riwayatpembelian ON tiket.id"
                    + "_tiket = riwayatpembelian.id_tiket INNER JOIN penumpang ON riwayatpembelian.nik = penumpang.nik "
                    + "WHERE tiket.id_tiket = "+ IdTiket +"";
            rs = st.executeQuery(sql);
            while (rs.next()){
                // membuat object 'obj' untuk menampung data yang dibaca dari DB
                
                Nama = rs.getString("penumpang.nama");
                Kapal = rs.getString("kapal.nama_kapal");
                String berangkat = rs.getString("rute.berangkat");
                String tujuan = rs.getString("rute.tujuan");
                Tanggal = rs.getString("tiket.waktu").substring(0,10);
                Jam = rs.getString("tiket.waktu").substring(11,15);
                
                //menggabungkan string _Berangkat dan _Tujuan
                Rute = berangkat + " - " + tujuan;
                
                //membuat tabel model dan menampilkan hasil query ke tabel
                DefaultTableModel model = (DefaultTableModel) tabel.getModel();
                Object [] datatampil = {Nama,Kapal,Rute,Tanggal,Jam};
                model.addRow(datatampil);
            }
            
            //menutup hasil penelusuran dan koneksi
            rs.close();
            st.close();
            
    }   catch (SQLException e){
        System.out.println("Terjadi error");
    }
    }//GEN-LAST:event_lihatActionPerformed

private void CetakTiketPDF(){

    //Deklrasi halaman pdf baru
    PDPage TiketKA = new PDPage();

    //pilih jenis dan ukuran font yang ingin dipakai
    PDFont JenisFont = PDType1Font.TIMES_ROMAN;
    int fontSize = 12;

    // BUat file PDF
    try(PDDocument dokumen = new PDDocument()){
        
        //Buat halaman baru
        dokumen.addPage(TiketKA);

        //Buat object content yang akan di isi teks
        PDPageContentStream konten = new PDPageContentStream(dokumen,TiketKA);

        //mulai menulis dokumen
        konten.beginText();

        //Aktifkan font yang telah dipilih di awal
        konten.setFont(JenisFont, fontSize);

        //atur besarnya spasi antar baris
        konten.setLeading(20f);

        //atur posisi awal penulisan teks
        konten.newLineAtOffset(50,750);

        // menulis isi dokumen
        konten.showText("       Tiket Kapal Laut        ");
        konten.newLine();
        konten.newLine();      //dua kali enter
        konten.showText("Nama penumpang: "+ Nama);
        konten.newLine();      //pindah baris
        konten.showText("Nama Kapal     :   "+ Kapal);
        konten.newLine();
        konten.showText("Rute           :   " + Rute);
        konten.newLine();
        konten.showText("Tanggal        :   "+ Tanggal);
        konten.newLine();
        konten.showText("Jam            :   "+ Jam + " WIB");

        //Mengakhiri penulisan dokumen
        konten.endText();

        //Menutup Dokument
        konten.close();    

        //Menyimpan dokumen pada direktori tertentu
        dokumen.save("D:/TiketKapal.pdf");
    } catch (IOException ioEx){
        System.out.println("Gagal membuat pdf");
    }

    //Buka file pdf
    try{
        File file = new File ("D:/TiketKapal.pdf");
        if (file.exists()){
            Desktop.getDesktop().open(file);
        } else {
            System.out.println("File not exits -> "+ file.getAbsolutePath());
        }
    } catch (IOException e){
        System.out.println("Gagal membuka file pdf.");
    }
}
    
    
    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
        CetakTiketPDF();
    }//GEN-LAST:event_cetakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCetakTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCetakTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCetakTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCetakTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCetakTiket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cetak;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lihat;
    private javax.swing.JTextField nomor_tiket;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables


}

   
